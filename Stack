class Node:
    def __init__(self, value):
        self.data = value
        self.next = None


class Stack:
    def __init__(self):
        self.head = None

    def is_empty(self):
        if self.head == None:
            return True
        else:
            return False

    def push(self, data):
        if self.is_empty():
            self.head = Node(data)
        else:
            new_node = Node(data)
            new_node.next = self.head
            self.head = new_node

    def pop(self):
        if self.is_empty():
            print("underflow")
            exit(1)
        else:
            pop_node = self.head
            self.head = self.head.next
            pop_node.next = None
            return pop_node.data

    def pprint(self):
        while self.head:
            print(self.head.data)
            self.head = self.head.next
